<#@ import namespace="System.Collections.Generic" #>
using System.Collections.Generic;
using Newtonsoft.Json;
using SharpnYNAB.Schema.Budget;
using System.Linq;

namespace SharpnYNAB.Schema
{
<# 
var objects = new Dictionary<string,List<string[]>>{
["Budget"]=new List<string[]>{
        new []{"Transactions","Transaction"},
        new []{"Subtransactions","Subtransaction"},
        }
};


foreach (var kv in objects){ 
var root = kv.Key;
var data = kv.Value;
#>
    public partial class <#=root#>Client{
        public override void UpdateFromChangedEntities(Roots.<#=root#> changedEntities)
        {
<# foreach (var row in data){#>
            foreach (var obj in changedEntities.<#=row[0]#>)
            {
                var currentObj = Obj.<#=row[0]#>.FirstOrDefault(o=>o.id == obj.id);
                if (currentObj != null){
                    if (obj.is_tombstone){
                        Obj.<#=row[0]#>.Remove(currentObj);
                    }
                }else{
                    Obj.<#=row[0]#>.Add(obj);
                }
            }
<# }#>
        }
    }
<# }#>
}
<#+
public struct Element{
    public string RootName {get;set;}
}

#>